name: CI Workflows

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

jobs:
  initial_checks:
    # Mandatory checks before CI tests
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      coverage: false
      envs: |
        # Code style
        - linux: codestyle

  tests:
    needs: initial_checks
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/tox.yml@v1
    with:
      coverage: codecov
      display: true
      libraries: |
        apt:
          - libxkbcommon-x11-dev

      envs: |
        # Standard tests
        # Linux builds - test on all supported PyQt5 and PySide2 versions,
        # and include all dependencies in some builds
        - linux: py37-test-pyqt510
        - linux: py37-test-pyqt511
        - linux: py37-test-pyqt512
        - linux: py37-test-pyqt513
        - linux: py37-test-pyside513
        - linux: py38-test-pyside514
        - linux: py39-test-pyqt515
        - linux: py310-test-pyside515

        # Test a few configurations on MacOS X (Big Sur/Monterey on arm64 for py310)
        - macos: py37-test-pyqt513
        - macos: py38-test-pyqt514
        - macos: py310-test-pyqt515
        - macos: py39-test-pyside514
          PLAT: arm64

        # Test some configurations on Windows
        - windows: py37-test-pyqt510
        - windows: py38-test-pyqt514
        - windows: py310-test-pyqt515
        - windows: py39-test-pyside515

        # Try out documentation build on Linux, macOS and Windows
        - linux: py39-docs-pyqt513
          coverage: false

        - macos: py37-docs-pyqt513
          coverage: false

        - windows: py38-docs-pyqt513
          coverage: false

  publish:
    needs: tests
    uses: OpenAstronomy/github-actions-workflows/.github/workflows/publish_pure_python.yml@v1
    with:
      libraries: 'libxkbcommon-x11-dev xvfb'
      test_extras: 'test,qt'
      test_command: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & sleep 3; DISPLAY=:99.0 pytest --pyargs echo
    secrets:
      pypi_token: ${{ secrets.pypi_token }}
